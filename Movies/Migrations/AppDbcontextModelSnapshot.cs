// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Data;

#nullable disable

namespace Movies.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    partial class AppDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiractoryMovie", b =>
                {
                    b.Property<int>("DiractoryId")
                        .HasColumnType("int");

                    b.Property<int>("moviesId")
                        .HasColumnType("int");

                    b.HasKey("DiractoryId", "moviesId");

                    b.HasIndex("moviesId");

                    b.ToTable("DiractoryMovie");
                });

            modelBuilder.Entity("Movies.models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Movies.models.Diractory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nationalityid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Diractories");
                });

            modelBuilder.Entity("Movies.models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Categoryid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Categoryid");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Movies.models.Nationalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiractoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiractoryId")
                        .IsUnique();

                    b.ToTable("Nationalty");
                });

            modelBuilder.Entity("DiractoryMovie", b =>
                {
                    b.HasOne("Movies.models.Diractory", null)
                        .WithMany()
                        .HasForeignKey("DiractoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.models.Movie", null)
                        .WithMany()
                        .HasForeignKey("moviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movies.models.Movie", b =>
                {
                    b.HasOne("Movies.models.Category", "Categoryname")
                        .WithMany("Movies")
                        .HasForeignKey("Categoryid");

                    b.Navigation("Categoryname");
                });

            modelBuilder.Entity("Movies.models.Nationalty", b =>
                {
                    b.HasOne("Movies.models.Diractory", "Diractory")
                        .WithOne("nationalty")
                        .HasForeignKey("Movies.models.Nationalty", "DiractoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diractory");
                });

            modelBuilder.Entity("Movies.models.Category", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Movies.models.Diractory", b =>
                {
                    b.Navigation("nationalty")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
